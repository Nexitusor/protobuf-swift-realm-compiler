//
//  GeneratorFile.swift
//  protobuf-swift-realm-runtimePackageDescription
//
//  Created by Alexey Khokhlov on 18.10.2017.
//

import Foundation
import ProtocolBuffers

final class GeneratorFile:DescriptorGenerator<Google.Protobuf.FileDescriptorProto>, CheckGenerateFile {
    
    
    init(descriptor: GeneratedDescriptorType) {
        super.init(descriptor: descriptor, writer: CodeWriter(file: descriptor, suffix: ".realm"))
    }
    
    required init(descriptor: GeneratedDescriptorType, writer: CodeWriter) {
        fatalError("init(descriptor:writer:) has not been implemented")
    }
    func generateSource() {
        self.writer.write("/// Generated by the Protocol Buffers compiler.  DO NOT EDIT!")
        self.writer.write("import Foundation")
        self.writer.write("import ProtocolBuffers")
        self.writer.write("import RealmSwift")
        self.writer.write()
        self.descriptor.messageType.forEach({
            let generator = GeneratorMessage(file: self, descriptor: $0, writer: self.writer)
            generator.generateSource()
        })
        self.descriptor.enumType.forEach({
            GeneratorEnum(file: self, descriptor: $0, writer: self.writer).generateSource()
        })
        self.descriptor.messageType.forEach({
            let generator = GeneratorMessage(file: self, descriptor: $0, writer: self.writer)
            generator.generateExtensions()
        })
        self.descriptor.enumType.forEach({
            let generator = GeneratorEnum(file: self, descriptor: $0, writer: self.writer)
            generator.generateExtensions()
        })
        
    }
    func filePath() -> String {
        return self.writer.outputFile
    }
    
    func checkCurrentDescriptorForGenerateOptions() -> Bool {
        if let options = GetOptions(self.descriptor), options.generateRealmObjects {
            return true
        }
        return false
    }
    func shouldGenerate() -> Bool {
        let filterMessages = self.descriptor.messageType.filter({
            return GeneratorMessage(file: self, descriptor: $0, writer: self.writer).shouldGenerateFile()
        })
        let filterEnums = self.descriptor.enumType.filter({ return GeneratorEnum(file: self, descriptor: $0, writer: self.writer).shouldGenerateFile() })
        return checkCurrentDescriptorForGenerateOptions() || filterMessages.count > 0 || filterEnums.count > 0
    }
    func shouldGenerateFile() -> Bool {
        return false
    }
}
